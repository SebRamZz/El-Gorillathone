services:
  postgres:
    image: postgres:17.5-alpine
    container_name: veo3_postgres_db
    volumes:
      - postgres-data:/var/lib/postgres/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost",
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: dockerfile.dev
    container_name: veo3_backend
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - ./backend:/usr/src/app
      - nest_node_modules:/usr/src/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    command: npm run start:dev
    depends_on:
     - postgres


  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile.dev
    container_name: veo3_frontend
    working_dir: /usr/src/app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/usr/src/app
      - angular_node_modules:/usr/src/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    command: ng serve


volumes:
  nest_node_modules:
  angular_node_modules:
  postgres-data:
